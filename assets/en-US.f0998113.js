import{_ as s}from"./elevation.7076906a.js";import{o as a,c as t,K as n}from"./vendor.8a125dba.js";const l={components:{}},e={class:"varlet-site-doc"},p=n(`<h1>Loading</h1><div class="card"><h3>Install</h3><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>
<span class="hljs-keyword">import</span> { Loading } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@varlet/ui&#39;</span>

createApp().use(Loading)
</code></pre></div><div class="card"><h3>Type</h3><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;circle&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;cube&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;wave&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;rect&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;disappear&quot;</span> /&gt;</span>
</code></pre></div><div class="card"><h3>Color</h3><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;circle&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#2979ff&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;cube&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#2979ff&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;wave&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#2979ff&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;rect&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#2979ff&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;disappear&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#2979ff&quot;</span> /&gt;</span>
</code></pre></div><div class="card"><h3>Size</h3><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;circle&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;cube&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;wave&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;rect&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;disappear&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> /&gt;</span>
</code></pre></div><div class="card"><h3>Wrap</h3><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;loading = !loading&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-bottom: 8px&quot;</span>&gt;</span>
  {{ loading ? &#39;Open&#39; : &#39;Close&#39; }}
<span class="hljs-tag">&lt;/<span class="hljs-name">var-button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">var-loading</span> <span class="hljs-attr">desc</span>=<span class="hljs-string">&quot;loading....&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;circle&quot;</span> <span class="hljs-attr">:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">var-card</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Intro&quot;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Varlet is a Material design mobile component library developed based on Vue3, developed and maintained by partners in the community.&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">var-loading</span>&gt;</span>
</code></pre><pre class="hljs"><code><link rel="stylesheet" href="./highlight.css"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {
    <span class="hljs-keyword">const</span> loading = ref(<span class="hljs-literal">false</span>)

    <span class="hljs-keyword">return</span> {
      loading,
    }
  }
}
</code></pre></div><h2>API</h2><div class="card"><h3>Props</h3><table><thead><tr><th>prop</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>color</code></td><td>Loading color</td><td><em>string</em></td><td><code>currentColor</code></td></tr><tr><td><code>type</code></td><td>Can be set to <code>circle</code> <code>wave</code> <code>cube</code> <code>rect</code> <code>disappear</code></td><td><em>string</em></td><td><code>circle</code></td></tr><tr><td><code>size</code></td><td>Can be set to <code>large</code> <code>normal</code> <code>small</code> <code>mini</code></td><td><em>string</em></td><td><code>normal</code></td></tr><tr><td><code>desc</code></td><td>Description of the loading</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>loading</code></td><td>Specify whether loading is active</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>radius</code></td><td>Set size when the <code>type</code> is <code>circle</code></td><td><em>string | number</em></td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td><code>default</code></td><td>Content wrapped in loading</td><td><code>-</code></td></tr><tr><td><code>desc</code></td><td>Description of the loading</td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>Style Variables</h3><p>Here are the CSS variables used by the component, Styles can be customized using <a href="#/en-US/style-provider">StyleProvider</a></p><table><thead><tr><th>Variable</th><th>Default</th></tr></thead><tbody><tr><td><code>--loading-opacity</code></td><td><code>0.38</code></td></tr></tbody></table></div>`,10),c=[p];function o(r,d,h,i,g,j){return a(),t("div",e,c)}var q=s(l,[["render",o]]);export{q as default};
